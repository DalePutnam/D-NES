import os

Import('env')
Import('lib_registry')

env = env.Clone()

env.Append(CPPPATH = ['.', 'common'])

env.MergeFlags(lib_registry.get_library_build_flags('X11'))
env.MergeFlags(lib_registry.get_library_build_flags('GL'))
env.MergeFlags(lib_registry.get_library_build_flags('alsa'))

env.SharedLibrary('dnes', ['nes.cc',
                           'nes_impl.cc',
                           'cpu.cc',
                           'ppu.cc',
                           'apu.cc',
                           'cart.cc',
                           'common/file.cc',
                           'common/ines.cc',
                           'common/nes_exception.cc',
                           'mappers/mapper_base.cc',
                           'mappers/cnrom.cc',
                           'mappers/mmc1.cc',
                           'mappers/mmc3.cc',
                           'mappers/nrom.cc',
                           'mappers/uxrom.cc',
                           'audio/audio_backend.cc',
                           'audio/iaudio_platform.cc',
                           'audio/alsa_platform.cc',
                           'video/gl_util.cc',
                           'video/video_backend.cc',
                           'video/igl_platform.cc',
                           'video/glx_platform.cc'])

env.Install(os.path.join(env['prefix'], 'include/dnes'), 'nes.h')
env.Install(os.path.join(env['prefix'], 'lib'), 'libdnes.so')
env.Clean('install', os.path.join(env['prefix'], 'include/dnes'))

env.Alias('core', './libdnes.so')
env.Default('core')